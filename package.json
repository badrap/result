{
  "name": "@badrap/result",
  "version": "0.2.4",
  "description": "A TypeScript result type taking cues from Rust's Result and Haskell's Either types",
  "main": "dist/index.js",
  "module": "dist/index.mjs",
  "source": "src/index.ts",
  "sideEffects": false,
  "repository": "badrap/result",
  "author": "Joachim Viide <jviide@iki.fi>",
  "license": "MIT",
  "scripts": {
    "test": "tsc --noEmit --skipLibCheck && TS_NODE_COMPILER_OPTIONS='{\"module\":\"commonjs\"}' mocha --require ts-node/register test/**/*.test.ts",
    "build": "rm -rf dist && microbundle --format es,cjs",
    "prepublishOnly": "npm run build"
  },
  "devDependencies": {
    "@types/chai": "^4.1.7",
    "@types/mocha": "^5.2.6",
    "chai": "^4.2.0",
    "microbundle": "^0.11.0",
    "mocha": "^6.1.4",
    "ts-node": "^8.1.0",
    "typescript": "^3.4.5"
  }
}
